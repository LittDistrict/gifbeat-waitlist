# Gifbeat Waitlist - Deployment Guide

This guide will help you deploy your Gifbeat waitlist landing page to Vercel with Supabase integration.

## ðŸš€ Quick Deployment Steps

### 1. Prepare Your Repository

1. **Create a new GitHub repository** called `gifbeat-waitlist`
2. **Upload all files** from the `gifbeat-waitlist` folder to your GitHub repository
3. **Make sure your repository is public** (required for free Vercel deployment)

### 2. Set Up Supabase

1. **Go to [supabase.com](https://supabase.com)** and create a new account
2. **Create a new project**:
   - Project name: `gifbeat-waitlist`
   - Database password: Choose a strong password
   - Region: Choose closest to your users
3. **Wait for setup** (takes 2-3 minutes)

### 3. Configure Supabase Database

1. **Go to the SQL Editor** in your Supabase dashboard
2. **Run the migration script**:

```sql
-- Create waitlist table
CREATE TABLE IF NOT EXISTS waitlist (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  email TEXT UNIQUE NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create index for faster email lookups
CREATE INDEX IF NOT EXISTS idx_waitlist_email ON waitlist(email);

-- Create index for sorting by creation date
CREATE INDEX IF NOT EXISTS idx_waitlist_created_at ON waitlist(created_at DESC);

-- Enable Row Level Security (RLS)
ALTER TABLE waitlist ENABLE ROW LEVEL SECURITY;

-- Create policy to allow anyone to insert emails
CREATE POLICY "Anyone can insert email" ON waitlist
  FOR INSERT WITH CHECK (true);

-- Create policy to allow authenticated users to view emails (for admin)
CREATE POLICY "Authenticated users can view emails" ON waitlist
  FOR SELECT USING (auth.role() = 'authenticated');
```

### 4. Get Supabase Credentials

1. **Go to Settings â†’ API** in your Supabase dashboard
2. **Copy the following values**:
   - Project URL (starts with `https://`)
   - Anon/public key (starts with `eyJ`)

### 5. Deploy to Vercel

1. **Go to [vercel.com](https://vercel.com)** and sign in with GitHub
2. **Click "New Project"**
3. **Import your GitHub repository** (`gifbeat-waitlist`)
4. **Configure the project**:
   - Framework Preset: Next.js
   - Root Directory: `./` (default)
   - Build Command: `npm run build` (default)
   - Output Directory: `.next` (default)
5. **Add Environment Variables**:
   - `NEXT_PUBLIC_SUPABASE_URL`: Your Supabase project URL
   - `NEXT_PUBLIC_SUPABASE_ANON_KEY`: Your Supabase anon key
6. **Click "Deploy"**

### 6. Verify Deployment

1. **Wait for deployment** to complete (2-3 minutes)
2. **Visit your Vercel URL** (provided after deployment)
3. **Test the waitlist form**:
   - Enter an email address
   - Click "Join the waitlist and claim gift"
   - Check for success message
4. **Verify in Supabase**:
   - Go to Table Editor in Supabase
   - Check the `waitlist` table for your test email

## ðŸ”§ Customization

### Update GIFs
1. **Replace GIFs** in `/public/gifs/` with your own
2. **Update the imports** in `/src/app/page.tsx` if needed
3. **Redeploy** (Vercel will auto-deploy on Git push)

### Update Branding
1. **Edit colors** in `/src/app/globals.css`
2. **Update copy** in `/src/app/page.tsx`
3. **Change social links** in the social section

### Update Domain
1. **Add custom domain** in Vercel project settings
2. **Update DNS records** as instructed by Vercel

## ðŸ“Š Monitoring & Analytics

### View Waitlist Signups
1. **Go to Supabase Table Editor**
2. **Select the `waitlist` table**
3. **Export as CSV** when needed

### Add Google Analytics
1. **Get Google Analytics tracking ID**
2. **Add to `next.config.ts`**:

```typescript
const nextConfig: NextConfig = {
  // ... existing config
  env: {
    GOOGLE_ANALYTICS_ID: process.env.GOOGLE_ANALYTICS_ID,
  },
}
```

3. **Add tracking code** to `/src/app/layout.tsx`

## ðŸš¨ Troubleshooting

### Common Issues

**1. Environment Variables Not Working**
- Double-check variable names in Vercel
- Make sure they start with `NEXT_PUBLIC_`
- Redeploy after adding variables

**2. Supabase Connection Failed**
- Verify your Supabase URL and key
- Check if your Supabase project is active
- Ensure RLS policies are set correctly

**3. Build Errors**
- Check the build logs in Vercel
- Ensure all dependencies are in `package.json`
- Verify TypeScript types are correct

**4. GIFs Not Loading**
- Check file paths in `/public/gifs/`
- Ensure GIF files are under 10MB
- Verify image imports in the code

### Getting Help

1. **Check Vercel logs** in the deployment dashboard
2. **Check Supabase logs** in the project dashboard
3. **Test locally** with `npm run dev`
4. **Contact support** if issues persist

## ðŸŽ¯ Next Steps

After successful deployment:

1. **Share your waitlist URL** with potential users
2. **Monitor signups** in Supabase
3. **Set up email notifications** for new signups
4. **Plan your launch strategy**
5. **Consider adding more features**:
   - Email confirmation
   - Social sharing
   - Referral system
   - Progress tracking

## ðŸ“ˆ Performance Tips

1. **Optimize GIFs**: Keep file sizes under 5MB
2. **Use WebP format**: For better compression
3. **Enable Vercel Analytics**: For performance monitoring
4. **Set up caching**: For better load times

---

**Your waitlist is now live! ðŸŽ‰**

Users can now sign up and you'll collect their emails in Supabase. Good luck with your launch!
